# Copyright 2025 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = binding-tariff-filestore

# Provides an implementation and configures all filters required by a Platform frontend microservice.
 play.filters.enabled += "uk.gov.hmrc.bindingtarifffilestore.filters.AuthFilter"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.modules.enabled += "uk.gov.hmrc.objectstore.client.play.modules.ObjectStoreModule"


# Play Parsers
# ~~~~
# File max size
play.http.parser.maxDiskBuffer=100MB

# Session configuration
# ~~~~~
application.session.httpOnly = false
application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

# Microservice specific config

mongodb {
  uri = "mongodb://localhost:27017/"${appName}
  timeToLiveInSeconds = 3600
}

microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }

    upscan-initiate {
      host = localhost
      port = 9570
    }

    object-store {
       host = localhost
       port = 8464
    }
  }
}

testMode = true

filestore {
  url = "localhost:9583"
  ssl = false
}

upscan {
  minFileSize = 1
  maxFileSize = 104857600 //100 MB
}

internal-auth.token = "9253947-99f3-47d7-9af2-b75b4f37fd34"
object-store.default-retention-period = 1-month